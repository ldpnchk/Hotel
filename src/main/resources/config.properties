##################################################
############# Application Properties #############
##################################################
dao.factory=mysql
pagination.size=2

##################################################
############ Dao Factories Properties ############
##################################################
dao.factory.mysql.key=mysql

##################################################
######### DataBase Connection Properties #########
##################################################
db.driver=com.mysql.cj.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/hotel?useUnicode=true&characterEncoding=UTF-8&useSSL=true
db.user=root
db.password=root
db.min.idle=5
db.max.idle=20
db.max.open.prepare.statements=100

##################################################
########### MysqlDao Queries Properties ##########
##################################################
mysql.payment.insert=			INSERT INTO payment (total, date, payment_method, reservation_id) VALUES (?, ?, ?, ?);
mysql.payment.update=			UPDATE payment SET total = ?, date = ?, payment_method = ?, reservation_id = ? WHERE payment_id = ?;
mysql.payment.delete=			DELETE FROM payment WHERE payment_id = ?;

mysql.reservation.insert=		INSERT INTO reservation (reservation_date, start_date, end_date, client_comment, administrator_comment, \
								status, users_id, room_type_id, room_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
mysql.reservation.update=		UPDATE reservation SET reservation_date = ?, start_date = ?, end_date = ?, client_comment = ?, \
								administrator_comment = ?, status = ?, users_id = ?, room_type_id = ?, room_id = ? WHERE reservation_id = ?;
mysql.reservation.delete=		DELETE FROM reservation WHERE reservation_id = ?;
mysql.reservation.get.by.user=  SELECT * FROM reservation WHERE users_id = ? LIMIT ? OFFSET ?;
mysql.reservation.count.by.user=SELECT COUNT(*) FROM reservation WHERE users_id = ?;
mysql.reservation.get.by.dates.and.room.and.status.with.room.type.and.room= \
								SELECT * FROM reservation \
								INNER JOIN room_type ON reservation.room_type_id = room_type.room_type_id \
								LEFT JOIN room ON reservation.room_id = room.room_id \
								WHERE ((reservation.start_date >= ? AND reservation.start_date < ?) \
								OR (reservation.end_date > ? AND reservation.end_date <= ?))  \
								AND (reservation.room_id = ?) \
								AND reservation.status = ?;
mysql.reservation.get.by.id.with.user.and.room.type.and.room.and.payment= \
								SELECT * FROM reservation \
								INNER JOIN users ON reservation.users_id = users.users_id \
								INNER JOIN room_type ON reservation.room_type_id = room_type.room_type_id \
								LEFT JOIN room ON reservation.room_id = room.room_id \
								LEFT JOIN payment ON reservation.reservation_id = payment.reservation_id \
								WHERE reservation.reservation_id = ?;
mysql.reservation.get.by.id=	SELECT * FROM reservation WHERE reservation.reservation_id = ?;

mysql.room.insert=				INSERT INTO room (room_number, room_type_id) VALUES (?, ?);
mysql.room.update=				UPDATE room SET room_number = ?, room_type_id = ? WHERE room_id = ?;
mysql.room.delete=				DELETE FROM room WHERE room_id = ?;
mysql.room.get.all=				SELECT * FROM room;
mysql.room.get.free.rooms.by.dates.and.room.type= \
								(SELECT * FROM room WHERE room_type_id = ? AND NOT EXISTS \
									(SELECT * FROM reservation WHERE (reservation.status = "approved" or "payed") \
									AND (((? >= reservation.start_date AND ? < reservation.end_date) \
									OR (? > reservation.start_date AND ? <= reservation.end_date)) \
									OR ((reservation.start_date >= ? AND reservation.start_date < ?) \
									OR (reservation.end_date > ? AND reservation.end_date <= ?))) \
									AND (reservation.room_id = room.room_id)));

mysql.room.type.insert=			INSERT INTO room_type (name, capacity, price, description) VALUES (?, ?, ?, ?);
mysql.room.type.update=			UPDATE room_type SET name = ?, capacity = ?, price = ?, description = ? WHERE room_type_id = ?;
mysql.room.type.delete=			DELETE FROM room_type WHERE room_type_id = ?;
mysql.room.type.get.free.room.types.by.dates.and.capacity=	\
								SELECT * FROM room_type WHERE capacity = ? AND room_type_id IN \
									(SELECT DISTINCT room_type_id FROM room WHERE NOT EXISTS \
										(SELECT * FROM reservation WHERE (reservation.status = "approved" or "payed") \
										AND (((? >= reservation.start_date AND ? < reservation.end_date) \
										OR (? > reservation.start_date AND ? <= reservation.end_date)) \
										OR ((reservation.start_date >= ? AND reservation.start_date < ?) \
										OR (reservation.end_date > ? AND reservation.end_date <= ?))) \
										AND (reservation.room_id = room.room_id)));

mysql.user.insert=				INSERT INTO users (username, password, email, phone_number, first_name, last_name, patronymic, role) \
								VALUES (?, ?, ?, ?, ?, ?, ?, ?);
mysql.user.update=				UPDATE users SET username = ?, password = ?, email = ?, phone_number = ?, first_name = ?, last_name = ?, \
								patronymic = ?, role = ? WHERE users_id = ?;
mysql.user.delete=				DELETE FROM users WHERE users_id = ?;
mysql.user.get.by.username=		SELECT * FROM users WHERE username = ?;
mysql.user.get.by.email=		SELECT * FROM users WHERE email = ?;

##################################################
######## Database Column Names Properties ########
##################################################
payment.payment_id=payment_id
payment.total=total
payment.date=date
payment.payment_method=payment_method
payment.reservation_id=reservation_id

reservation.reservation_id=reservation_id
reservation.reservation_date=reservation_date
reservation.start_date=start_date
reservation.end_date=end_date
reservation.status=status
reservation.client_comment=client_comment
reservation.administrator_comment=administrator_comment

room.room_id=room_id
room.room_number=room.room_number
room.room_type_id=room.room_type_id

room_type.room_type_id=room_type_id
room_type.name=name
room_type.capacity=capacity
room_type.price=price
room_type.description=description

users.users_id=users_id
users.username=username
users.password=password
users.email=email
users.phone_number=phone_number
users.first_name=first_name
users.last_name=last_name
users.patronymic=patronymic
users.role=role

##################################################
############# Servlet URLs Properties ############
##################################################
redirect=redirect:
main.default=/hotel
page.allReservations=/allReservations.jsp
page.main=/index.jsp
page.login=/login.jsp
page.registration=/registration.jsp
page.404=/404.jsp
page.reservation.details=/reservationDetails.jsp
page.reservation=/reservation.jsp
page.profile=/profile.jsp
page.clientReservations=/clientReservations.jsp

url.main=redirect:/main
url.login=redirect:/login
url.reservation.details=redirect:/reservationDetails
url.reservation=redirect:/reservation
url.profile=redirect:/updateProfile
url.clientReservations=redirect:/clientReservations

parameter.username=username
parameter.password=password
parameter.email=email
parameter.phonenumber=phonenumber
parameter.firstname=firstname
parameter.lastname=lastname
parameter.patronymic=patronymic
parameter.comment=comment
parameter.reservation.date=reservationDate
parameter.start.date=startDate
parameter.end.date=endDate
parameter.room.type.id=roomTypeId
parameter.reservation.id=reservationId
parameter.datefilter=datefilter
parameter.capacity=capacity
parameter.admin.comment=adminComment
parameter.status=status
parameter.amount=amount
parameter.payment.method=method
parameter.room.id=roomId

attribute.user=user
attribute.logged.users=loggesUsers
attribute.statuses=statuses
attribute.reservation=reservation
attribute.options=options
attribute.date.format.error=dateFormatError
attribute.reservations=reservations
attribute.payment.types=paymentTypes
attribute.rooms=rooms
attribute.room=room

##################################################
######### Regular Expressions Properties #########
##################################################
regex.email=^[A-Za-z0-9+_.-]+@(.+)$

##################################################
######## Invalid Input Messages Properties #######
##################################################
invalid.input.username.empty=invalid.input.username.empty
invalid.input.username.short=invalid.input.username.short
invalid.input.username.long=invalid.input.username.long
invalid.input.username.taken=invalid.input.username.taken
invalid.input.password.empty=invalid.input.password.empty
invalid.input.password.short=invalid.input.password.short
invalid.input.password.long=invalid.input.password.long
invalid.input.email.empty=invalid.input.email.empty
invalid.input.email.format=invalid.input.email.format
invalid.input.email.taken=invalid.input.email.taken
invalid.input.phone.number.empty=invalid.input.phone.number.empty
invalid.input.first.name.empty=invalid.input.first.name.empty
invalid.input.last.name.empty=invalid.input.last.name.empty
invalid.input.reservation.reservation.date=invalid.input.reservation.reservation.date
invalid.input.reservation.start.date=invalid.input.reservation.start.date
invalid.input.reservation.new.room=invalid.input.reservation.new.room
invalid.input.reservation.denied.room=invalid.input.reservation.denied.room
invalid.input.reservation.approved.room=invalid.input.reservation.approved.room